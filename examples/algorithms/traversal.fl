# Works for binary trees only

let depthFirstSearch <- \(tree, accumulator []), (
  !tree ? return <- accumulator
  return <- concat
    accumulator
    tree
    depthFirstSearch tree.left
    depthFirstSearch tree.right
)

let breadthFirstSearch <- \(tree), (
  let queue <- [tree]
  let result <- []
  while \(queue -> length) \(
    let current <- queue.(-1)
    @queue <-- \(_. ..-1)
    @result <-- \(_:current)
    current ?
       @queue <-- \(current.left:current.right:_)
  )
  return result
)
