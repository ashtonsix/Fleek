import {querySelector, mount} from '@fleek/dom'
import {div, button} from '@fleek/tags'

: Stream (Number)
let value <- $ 0

: Number => Element
let Counter <- \(value), (
  div
    button ({onClick: \($value <-- \(_ - 1))}, `-`)
    div value
    button ({onClick: \($value <-- \(_ + 1))}, `+`)
)

: Element => ()
let render <- \(view), (
  mount
    querySelector `body`
    view
)

: Stream (Number => ())
value -> Counter -> render

##
Alternative non-streaming approach

import {querySelector, mount} from '@fleek/dom'
import {div, button} from '@fleek/tags'

let value <- 0

let render <- \(
  mount
    querySelector#(`body`)
    div
      button ({onClick: \(@value <-- \(_ - 1), () -> render)}, `-`)
      div value
      button ({onClick: \(@value <-- \(_ + 1), () -> render)}, `+`)
)

() -> render
##
